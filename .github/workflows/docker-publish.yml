name: 🐳 Docker Build & Publish

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to build and publish'
        required: true
        default: 'latest'
  push:
    tags: [ "v*" ]
  schedule:
    # Rebuild weekly on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: drakkarstorm/deadlinkr

jobs:
  # ==============================================================================
  # 🐳 Multi-Architecture Docker Build
  # ==============================================================================
  docker-build:
    name: 🐳 Build Multi-Arch Images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write

    strategy:
      matrix:
        platform:
          - linux/amd64
          - linux/arm64

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: 🔧 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🏷️ Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
            tavernetech/deadlinkr
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=tag
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=schedule,pattern=weekly-{{date 'YYYYMMDD'}}
          flavor: |
            suffix=-${{ matrix.platform }}

      - name: 🔑 Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🔑 Log in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 🏗️ Build and push platform-specific image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: ${{ matrix.platform }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=${{ matrix.platform }}
          cache-to: type=gha,mode=max,scope=${{ matrix.platform }}

  # ==============================================================================
  # 🏷️ Create Multi-Arch Manifest
  # ==============================================================================
  docker-manifest:
    name: 🏷️ Create Multi-Arch Manifest
    runs-on: ubuntu-latest
    needs: docker-build
    permissions:
      contents: read
      packages: write

    steps:
      - name: 🔑 Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🔑 Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 🏷️ Extract tag name
        id: tag
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "tag=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref }}" == refs/tags/* ]]; then
            echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event_name }}" == "schedule" ]]; then
            echo "tag=weekly-$(date +%Y%m%d)" >> $GITHUB_OUTPUT
          else
            echo "tag=latest" >> $GITHUB_OUTPUT
          fi

      - name: 🔗 Create and push multi-arch manifest (GHCR)
        run: |
          TAG="${{ steps.tag.outputs.tag }}"
          docker manifest create \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${TAG} \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${TAG}-linux/amd64 \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${TAG}-linux/arm64
          docker manifest push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${TAG}

      - name: 🔗 Create and push multi-arch manifest (Docker Hub)
        run: |
          TAG="${{ steps.tag.outputs.tag }}"
          docker manifest create \
            tavernetech/deadlinkr:${TAG} \
            tavernetech/deadlinkr:${TAG}-linux/amd64 \
            tavernetech/deadlinkr:${TAG}-linux/arm64
          docker manifest push tavernetech/deadlinkr:${TAG}

  # ==============================================================================
  # 🛡️ Security Scanning
  # ==============================================================================
  security-scan:
    name: 🛡️ Security Scan
    runs-on: ubuntu-latest
    needs: docker-manifest
    permissions:
      security-events: write

    steps:
      - name: 🛡️ Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: 📤 Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

      - name: 🔍 Run Snyk security scan
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          args: --severity-threshold=high

  # ==============================================================================
  # 📝 Update Docker Hub README
  # ==============================================================================
  update-readme:
    name: 📝 Update Docker Hub README
    runs-on: ubuntu-latest
    needs: docker-manifest
    if: github.ref == 'refs/heads/master'

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📝 Docker Hub Description
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: tavernetech/deadlinkr
          readme-filepath: ./README.md